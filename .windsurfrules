
- Do not create folders or files if they already exist.
- Follow existing project structure and conventions.
- Always review and understand the current directory structure before making changes.
- Code should be modular, reusable, and minimal — avoid duplication.
- Prefer functional components and hooks over class components.
- Do not create scripts or code that automates shell commands unless explicitly requested.

- Follow established project linting and formatting rules (Prettier, ESLint, etc.).
- Use TypeScript types and interfaces where appropriate for clarity and safety.
- Use environment variables for configuration — never hardcode sensitive data.
- Keep components and functions small — single-responsibility principle.

- Do not make large changes to code that is passing tests unless explicitly instructed.
- When modifying a feature:
  - Only touch what is necessary.
  - Leave unrelated code untouched.
- Preserve existing code comments, structure, and naming unless directed otherwise.

- All tests must pass before and after making changes.
- Add new tests for new functionality or changes to critical logic.
- Do not remove tests unless instructed.

- Use semantic HTML.
- Ensure basic accessibility (alt text for images, proper heading levels, labels for inputs).
- Avoid introducing UI changes without context or approval.


- Remember: The goal is to augment a human developer workflow — not overwrite decisions or force major structural changes without discussion.
- This is a client side github pages project do not use serverside code.
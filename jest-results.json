{"numFailedTestSuites":1,"numFailedTests":3,"numPassedTestSuites":5,"numPassedTests":37,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":6,"numTotalTests":40,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1744557557642,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Ohm's Law Utilities","validateInputs"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities validateInputs validates voltage calculation inputs","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"validates voltage calculation inputs"},{"ancestorTitles":["Ohm's Law Utilities","validateInputs"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities validateInputs validates current calculation inputs","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"validates current calculation inputs"},{"ancestorTitles":["Ohm's Law Utilities","validateInputs"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities validateInputs validates resistance calculation inputs","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"validates resistance calculation inputs"},{"ancestorTitles":["Ohm's Law Utilities","validateInputs"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities validateInputs validates power calculation inputs","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"validates power calculation inputs"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":2,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m20\u001b[39m\nReceived: \u001b[31m20000\u001b[39m\n\nExpected precision:    2\nExpected difference: < \u001b[32m0.005\u001b[39m\nReceived difference:   \u001b[31m19980\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m20\u001b[39m\nReceived: \u001b[31m20000\u001b[39m\n\nExpected precision:    2\nExpected difference: < \u001b[32m0.005\u001b[39m\nReceived difference:   \u001b[31m19980\u001b[39m\n    at Object.<anonymous> (D:\\battlewithbytes.io\\tests\\lib\\utils\\ohmsLawUtils.test.ts:154:42)\n    at Promise.then.completed (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Ohm's Law Utilities calculateOhmsLaw calculates voltage correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"calculates voltage correctly"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities calculateOhmsLaw calculates current correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"calculates current correctly"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":0,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m10\u001b[39m\nReceived: \u001b[31m0.01\u001b[39m\n\nExpected precision:    2\nExpected difference: < \u001b[32m0.005\u001b[39m\nReceived difference:   \u001b[31m9.99\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m10\u001b[39m\nReceived: \u001b[31m0.01\u001b[39m\n\nExpected precision:    2\nExpected difference: < \u001b[32m0.005\u001b[39m\nReceived difference:   \u001b[31m9.99\u001b[39m\n    at Object.<anonymous> (D:\\battlewithbytes.io\\tests\\lib\\utils\\ohmsLawUtils.test.ts:186:45)\n    at Promise.then.completed (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Ohm's Law Utilities calculateOhmsLaw calculates resistance correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"calculates resistance correctly"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":0,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m40\u001b[39m\nReceived: \u001b[31m40000\u001b[39m\n\nExpected precision:    2\nExpected difference: < \u001b[32m0.005\u001b[39m\nReceived difference:   \u001b[31m39960\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m40\u001b[39m\nReceived: \u001b[31m40000\u001b[39m\n\nExpected precision:    2\nExpected difference: < \u001b[32m0.005\u001b[39m\nReceived difference:   \u001b[31m39960\u001b[39m\n    at Object.<anonymous> (D:\\battlewithbytes.io\\tests\\lib\\utils\\ohmsLawUtils.test.ts:201:40)\n    at Promise.then.completed (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-circus@29.7.0\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\battlewithbytes.io\\node_modules\\.pnpm\\jest-runner@29.7.0\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Ohm's Law Utilities calculateOhmsLaw calculates power correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"calculates power correctly"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities calculateOhmsLaw handles current values with A suffix correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"handles current values with A suffix correctly"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities calculateOhmsLaw handles current values with mA suffix correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"handles current values with mA suffix correctly"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities calculateOhmsLaw handles power values correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"handles power values correctly"}],"endTime":1744557558269,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mOhm's Law Utilities › calculateOhmsLaw › calculates voltage correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m20\u001b[39m\n    Received: \u001b[31m20000\u001b[39m\n\n    Expected precision:    2\n    Expected difference: < \u001b[32m0.005\u001b[39m\n    Received difference:   \u001b[31m19980\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 152 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 153 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m calculateOhmsLaw(values\u001b[33m,\u001b[39m \u001b[32m'voltage'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 154 |\u001b[39m       expect(parseFloat(result\u001b[33m.\u001b[39mvoltage))\u001b[33m.\u001b[39mtoBeCloseTo(\u001b[35m20\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 155 |\u001b[39m       expect(parseFloat(result\u001b[33m.\u001b[39mpower))\u001b[33m.\u001b[39mtoBeCloseTo(\u001b[35m40\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 156 |\u001b[39m       expect(result\u001b[33m.\u001b[39mcalculatedProperty)\u001b[33m.\u001b[39mtoBe(\u001b[32m'voltage'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 157 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/lib/utils/ohmsLawUtils.test.ts\u001b[39m\u001b[0m\u001b[2m:154:42)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mOhm's Law Utilities › calculateOhmsLaw › calculates resistance correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m10\u001b[39m\n    Received: \u001b[31m0.01\u001b[39m\n\n    Expected precision:    2\n    Expected difference: < \u001b[32m0.005\u001b[39m\n    Received difference:   \u001b[31m9.99\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 184 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 185 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m calculateOhmsLaw(values\u001b[33m,\u001b[39m \u001b[32m'resistance'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 186 |\u001b[39m       expect(parseFloat(result\u001b[33m.\u001b[39mresistance))\u001b[33m.\u001b[39mtoBeCloseTo(\u001b[35m10\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 187 |\u001b[39m       expect(parseFloat(result\u001b[33m.\u001b[39mpower))\u001b[33m.\u001b[39mtoBeCloseTo(\u001b[35m40\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 188 |\u001b[39m       expect(result\u001b[33m.\u001b[39mcalculatedProperty)\u001b[33m.\u001b[39mtoBe(\u001b[32m'resistance'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 189 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/lib/utils/ohmsLawUtils.test.ts\u001b[39m\u001b[0m\u001b[2m:186:45)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mOhm's Law Utilities › calculateOhmsLaw › calculates power correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeCloseTo\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m40\u001b[39m\n    Received: \u001b[31m40000\u001b[39m\n\n    Expected precision:    2\n    Expected difference: < \u001b[32m0.005\u001b[39m\n    Received difference:   \u001b[31m39960\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 199 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 200 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m calculateOhmsLaw(values\u001b[33m,\u001b[39m \u001b[32m'power'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 201 |\u001b[39m       expect(parseFloat(result\u001b[33m.\u001b[39mpower))\u001b[33m.\u001b[39mtoBeCloseTo(\u001b[35m40\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 202 |\u001b[39m       expect(result\u001b[33m.\u001b[39mcalculatedProperty)\u001b[33m.\u001b[39mtoBe(\u001b[32m'power'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 203 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 204 |\u001b[39m     \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/lib/utils/ohmsLawUtils.test.ts\u001b[39m\u001b[0m\u001b[2m:201:40)\u001b[22m\u001b[2m\u001b[22m\n","name":"D:\\battlewithbytes.io\\tests\\lib\\utils\\ohmsLawUtils.test.ts","startTime":1744557557924,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Ohm's Law Utilities","validateInputs"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities validateInputs TEMP DEBUG: parser behavior in this test file","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"TEMP DEBUG: parser behavior in this test file"},{"ancestorTitles":["Ohm's Law Utilities","validateInputs"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities validateInputs validates voltage calculation inputs","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"validates voltage calculation inputs"},{"ancestorTitles":["Ohm's Law Utilities","validateInputs"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities validateInputs validates current calculation inputs","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"validates current calculation inputs"},{"ancestorTitles":["Ohm's Law Utilities","validateInputs"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities validateInputs validates resistance calculation inputs","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"validates resistance calculation inputs"},{"ancestorTitles":["Ohm's Law Utilities","validateInputs"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities validateInputs validates power calculation inputs","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"validates power calculation inputs"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities calculateOhmsLaw calculates voltage correctly","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"status":"passed","title":"calculates voltage correctly"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities calculateOhmsLaw calculates current correctly","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"status":"passed","title":"calculates current correctly"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities calculateOhmsLaw calculates resistance correctly","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"status":"passed","title":"calculates resistance correctly"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities calculateOhmsLaw calculates power correctly","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"status":"passed","title":"calculates power correctly"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities calculateOhmsLaw handles current values with A suffix correctly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"handles current values with A suffix correctly"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities calculateOhmsLaw handles current values with mA suffix correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"handles current values with mA suffix correctly"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities calculateOhmsLaw handles power values correctly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"handles power values correctly"},{"ancestorTitles":["Ohm's Law Utilities","calculateOhmsLaw"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Ohm's Law Utilities calculateOhmsLaw handles insufficient data","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"handles insufficient data"}],"endTime":1744557558385,"message":"","name":"D:\\battlewithbytes.io\\tests\\lib\\utils\\inputUtils.test.ts","startTime":1744557558300,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["parseValueWithSuffix"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"parseValueWithSuffix parses basic numbers correctly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"parses basic numbers correctly"},{"ancestorTitles":["parseValueWithSuffix"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"parseValueWithSuffix parses values with kilo (k/K) suffix correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"parses values with kilo (k/K) suffix correctly"},{"ancestorTitles":["parseValueWithSuffix"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"parseValueWithSuffix parses values with mega (M) suffix correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"parses values with mega (M) suffix correctly"},{"ancestorTitles":["parseValueWithSuffix"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"parseValueWithSuffix parses values with milli (m) suffix correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"parses values with milli (m) suffix correctly"},{"ancestorTitles":["parseValueWithSuffix"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"parseValueWithSuffix parses values with micro (u/µ) suffix correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"parses values with micro (u/µ) suffix correctly"},{"ancestorTitles":["parseValueWithSuffix"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"parseValueWithSuffix parses values with giga (G) suffix correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"parses values with giga (G) suffix correctly"},{"ancestorTitles":["parseValueWithSuffix"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"parseValueWithSuffix parses values with unit symbols correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"parses values with unit symbols correctly"},{"ancestorTitles":["parseValueWithSuffix"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"parseValueWithSuffix parses milliamps (mA) correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"parses milliamps (mA) correctly"},{"ancestorTitles":["parseValueWithSuffix"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"parseValueWithSuffix handles empty or invalid inputs","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"handles empty or invalid inputs"}],"endTime":1744557558492,"message":"","name":"D:\\battlewithbytes.io\\tests\\lib\\utils\\parseValueWithSuffix.test.ts","startTime":1744557558433,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Debug parseValueWithSuffix"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Debug parseValueWithSuffix debug actual behavior","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"debug actual behavior"}],"endTime":1744557558577,"message":"","name":"D:\\battlewithbytes.io\\tests\\lib\\utils\\debug-parser.test.ts","startTime":1744557558521,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Battle With Bytes Blog System","Blog Structure"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Battle With Bytes Blog System Blog Structure should have the correct blog directory structure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have the correct blog directory structure"},{"ancestorTitles":["Battle With Bytes Blog System","Blog Structure"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Battle With Bytes Blog System Blog Structure should have at least one blog post","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have at least one blog post"},{"ancestorTitles":["Battle With Bytes Blog System","Blog Post Format"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Battle With Bytes Blog System Blog Post Format should have index.mdx and meta.txt files","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should have index.mdx and meta.txt files"},{"ancestorTitles":["Battle With Bytes Blog System","Blog Post Format"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Battle With Bytes Blog System Blog Post Format should have properly formatted meta.txt file","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should have properly formatted meta.txt file"},{"ancestorTitles":["Battle With Bytes Blog System","Blog Post Format"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Battle With Bytes Blog System Blog Post Format should have properly formatted index.mdx file without frontmatter","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have properly formatted index.mdx file without frontmatter"}],"endTime":1744557558665,"message":"","name":"D:\\battlewithbytes.io\\tests\\blog\\blog-system.test.js","startTime":1744557558609,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Detailed Debug Tests"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Detailed Debug Tests debug calculateOhmsLaw behavior","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"debug calculateOhmsLaw behavior"}],"endTime":1744557558749,"message":"","name":"D:\\battlewithbytes.io\\tests\\lib\\utils\\detailed-debug.test.ts","startTime":1744557558696,"status":"passed","summary":""}],"wasInterrupted":false}
